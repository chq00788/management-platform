<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chq.project.management.system.dao.UserDao">

    <sql id="baseColumn">
        id,
        username,
        password,
        real_name,
        phone,
        status,
        create_time,
        last_login_time,
        deleted
    </sql>

    <resultMap id="baseResultMap" type="com.chq.project.management.system.model.UserModel">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="realName" column="real_name"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <sql id="selectiveWhere">
        <where>

        </where>
    </sql>


    <select id="selectList" resultMap="baseResultMap">
        SELECT
        <include refid="baseColumn"/>
        FROM t_system_user
        <include refid="selectiveWhere"/>
        ORDER BY ${sortCode} ${sortRole}
    </select>

    <insert id="insert" parameterType="com.chq.project.management.system.model.UserModel">
        INSERT INTO t_system_user(
            username,
            password,
            real_name,
            phone,
            status,
            create_time,
            last_login_time,
            deleted
        )VALUES(
            #{username},
            #{password},
            #{realName},
            #{phone},
            #{status},
            #{createTime},
            #{lastLoginTime},
            #{deleted}
        )
    </insert>

    <update id="update" parameterType="com.chq.project.management.system.model.UserModel">
        UPDATE t_system_user
        <set>
            <if test="username != null and username !=''  ">
                username = #{username},
            </if>
            <if test="password != null and password !=''  ">
                password = #{password},
            </if>
            <if test="realName != null and realName !=''  ">
                real_name = #{realName},
            </if>
            <if test="phone != null and phone !=''  ">
                phone = #{phone},
            </if>
            <if test="status != null and status !=''  ">
                status = #{status},
            </if>
            <if test="createTime != null and createTime !=''  ">
                create_time = #{createTime},
            </if>
            <if test="lastLoginTime != null and lastLoginTime !=''  ">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="deleted != null and deleted !=''  ">
                deleted = #{deleted},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="integer">
        DELETE FROM t_system_user
        WHERE id = #{id}
    </delete>

    <select id="getById" resultMap="baseResultMap">
        SELECT
        <include refid="baseColumn"/>
        FROM t_system_user
        WHERE id = #{id}
    </select>

    <select id="getByUsername" resultMap="baseResultMap">
        SELECT
        <include refid="baseColumn"/>
        FROM t_system_user
        WHERE username = #{username}
    </select>


    <insert id="saveRole" parameterType="java.util.Map">
        insert into t_system_user_role(user_id,role_id)values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userId},
            #{item.roleId}
            )
        </foreach>
    </insert>
    <delete id="deleteRole" parameterType="integer">
        delete from t_system_user_role where user_id = #{userId}
    </delete>


    <resultMap id="infoResultMap" type="com.chq.project.management.system.model.UserModel">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="realName" column="real_name"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="deleted" column="deleted"/>
        <collection property="roles" ofType="java.lang.String">
            <result property="roles" column="perm_code"/>
        </collection>
    </resultMap>
    <select id="getInfoByUsername" resultMap="infoResultMap">
        SELECT DISTINCT
            u.id,
            u.username,
            u.real_name,
            u.phone,
            u. STATUS,
            u.create_time,
            u.last_login_time,
            u.deleted,
            p.perm_code
        FROM
            t_system_user u
        LEFT JOIN t_system_user_role ur ON u.id = ur.user_id
        LEFT JOIN t_system_role_perm rp ON ur.role_id = rp.role_id
        LEFT JOIN t_system_perm p ON rp.perm_id = p.id
        WHERE
            u.username = #{username}
            and p.deleted = 0
            and p.status = '0'
    </select>

    <update id="updateLoginTime">
        UPDATE t_system_user
        set last_login_time = #{lastLoginTime}
        WHERE username = #{username}
    </update>
</mapper>